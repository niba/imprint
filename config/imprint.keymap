#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#include "zmk-helpers/helper.h"
#include "imprint.h"
#include "zmk-helpers/unicode-chars/polish.dtsi"

#define _BT_SEL_KEYS_                                                        \
    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR

ZMK_APPLY_MATRIX_TRANSFORM(imprint_function_row)

#define DEF 0
#define NAV 1
#define SYMBOL 2
#define NUM 3
#define SYS 4
#define MOUSE 5

#define XXX &none
#define ___ &trans

/* Global defaults */

#define QUICK_TAP_MS 175

&sk {
  release-after-ms = <900>;
  quick-release;
};

&sl { // Allow sticky mods to chord across sticky layers.
  ignore-modifiers;
};

&lt {
  flavor = "balanced";
  tapping-term-ms = <200>;
  quick-tap-ms = <QUICK_TAP_MS>;
};

#define KEYS_L \
    LC5 LC4 LC3 LC2 LC1 LC0 \
    LN5 LN4 LN3 LN2 LN1 LN0 \
    LT5 LT4 LT3 LT2 LT1 LT0 \
    LM5 LM4 LM3 LM2 LM1 LM0 \
    LB5 LB4 LB3 LB2 LB1 LB0 \
            LF1 LF0

#define KEYS_R \
    RC0 RC1 RC2 RC3 RC4 RC5 \
    RN0 RN1 RN2 RN3 RN4 RN5 \
    RT0 RT1 RT2 RT3 RT4 RT5 \
    RM0 RM1 RM2 RM3 RM4 RM5 \
    RB0 RB1 RB2 RB3 RB4 RB5 \
            RF0 RF1

#define THUMBS \
    LH2 LH1 LH0 \
    LHB2 LHB1 LHB0 \
    RH0 RH1 RH2 \
    RHB0 RHB1 RHB2

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS)                                 \
  ZMK_HOLD_TAP(NAME, bindings = <HOLD>, <TAP>; flavor = "balanced";            \
               tapping-term-ms = <280>; quick-tap-ms = <QUICK_TAP_MS>;         \
               require-prior-idle-ms = <150>; hold-trigger-on-release;         \
               hold-trigger-key-positions = <TRIGGER_POS>;)

MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS) // Left-hand HRMs.
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS) // Right-hand HRMs.

ZMK_MACRO(prev_q, bindings = <&kp LBKT &kp Q>;)
ZMK_MACRO(next_q, bindings = <&kp RBKT &kp Q>;)

ZMK_MOD_MORPH(bs_del, bindings = <&kp BSPC>, <&kp DEL>;
    mods = <(MOD_LSFT|MOD_RSFT)>; keep-mods = <MOD_RSFT>;)

/* Magic-shift & auto-layers */

// Tap: repeat after alpha, else sticky-shift |
// Shift + tap/ double-tap: caps-word | Hold: shift.
#define MAGIC_SHIFT &magic_shift LSHFT 0
ZMK_HOLD_TAP(magic_shift, bindings = <&kp>, <&magic_shift_tap>;
    flavor = "balanced"; tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;)
ZMK_MOD_MORPH(magic_shift_tap, bindings = <&sk LSHIFT>, <&caps_word>;
    mods = <(MOD_LSFT)>;)
&caps_word { // Mods deactivate caps-word, requires PR #1451. [TODO: rebase]
  /delete-property/ ignore-modifiers;
};
// SHIFT END

#ifndef ZMK_BASE_LAYER
  #define ZMK_BASE_LAYER(name, LC, RC, LN, RN, LT, RT, LM, RM, LB, RB, LF, RF, LH, RH, LHB, RHB)                 \
    ZMK_LAYER(name, LC RC LN RN LT RT LM RM LB RB LF RF LH RH LHB RHB)
#endif


ZMK_BASE_LAYER(Base,
//╭─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────╮   ╭─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────╮
    XXX               XXX               XXX               XXX               XXX               XXX              ,    XXX               XXX               XXX               XXX               XXX               XXX             ,
//├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤   ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤
    &kp GRAVE         &kp N1            &kp N2            &kp N3            &kp N4            &kp N5           ,    &kp N6            &kp N7            &kp N8            &kp N9            &kp N0            &kp MINUS        ,
//├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤   ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤
    &kp TAB           &kp Q             &kp W             &kp F             &kp P             &kp B            ,    &kp J             &kp L             &kp U             &kp Y             &kp SQT           &kp BSLH         ,
//├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤   ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤
    &kp LCTRL         &hml LGUI A       &hml LALT R       &hml LSHFT S      &hml LCTRL T      &kp G            ,    &kp M             &hmr LCTRL N      &hmr RSHFT E      &hmr LALT I       &hmr LGUI O       &kp SEMI         ,
//├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤   ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤
    &kp LSHFT         &kp Z             &kp X             &kp C             &kp D             &kp V            ,    &kp K             &kp H             &kp COMMA         &kp DOT           &kp FSLH          &kp RSHFT        ,
//├─────────────────┴─────────────────┴─────────────────┼─────────────────┼─────────────────├─────────────────┼   ├─────────────────┼─────────────────┼─────────────────┼─────────────────┴─────────────────┴─────────────────┤
                                        &kp LALT          &kp DEL                                              ,                                        &kp BSPC          &kp RGUI          ,
//                                    ╰─────────────────┴─────────────────┼                                                                           ├─────────────────┼─────────────────╯
                                                          &lt SYMBOL SPACE  MAGIC_SHIFT      &kp RGUI          ,    &mkp LCLK         &kp ESC          &lt NAV RET       ,
//                                                      ╰─────────────────┴─────────────────┼─────────────────┤   ├─────────────────┼─────────────────┼─────────────────╯
                                                          &bs_del           &mo 1            &mo 2             ,    &mo NAV           &mo 2             &kp TAB
//                                                      ╰─────────────────┴─────────────────┴─────────────────╯   ╰─────────────────┴─────────────────┴─────────────────╯
)

ZMK_BASE_LAYER(Nav,
//╭─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────╮   ╭─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────╮
    ___               ___               ___               ___               ___               ___              ,    ___               ___               ___               ___               ___               ___             ,
//├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤   ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤
    &kp F1           &kp F2            &kp F3            &kp F4            &kp F5            &kp F6            ,    &kp F7            &kp F8            &kp F9            &kp F10           &kp F11           &kp F12         ,
//├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤   ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤
    ___              ___               &kp N7            &kp N8            &kp N9            XXX               ,    XXX               XXX               &prev_q           &next_q           XXX               ___             ,
//├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤   ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤
    ___              &hml LGUI MINUS   &hml LALT N4      &hml LSHFT N5     &hml LCTRL N6     &kp N0            ,    XXX               &kp LEFT          &kp DOWN          &kp UP            &kp RIGHT         ___             ,
//├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤   ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤
    ___              ___               &kp N1            &kp N2            &kp N3            XXX               ,    XXX               &kp RBRC          ___               ___               &kp BSLH          ___             ,
//├─────────────────┴─────────────────┴─────────────────┼─────────────────┼─────────────────├─────────────────┼   ├─────────────────┼─────────────────┼─────────────────┼─────────────────┴─────────────────┴─────────────────┤
                                        &kp LALT          &kp DEL                                              ,                                        &kp BSPC          &kp RGUI          ,
//                                    ╰─────────────────┴─────────────────┼                                                                           ├─────────────────┼─────────────────╯
                                                          ___               ___               ___              ,      ___             ___               ___             ,
//                                                      ╰─────────────────┴─────────────────┼─────────────────┤   ├─────────────────┼─────────────────┼─────────────────╯
                                                          ___               ___               ___              ,      ___             ___               ___
//                                                      ╰─────────────────┴─────────────────┴─────────────────╯   ╰─────────────────┴─────────────────┴─────────────────╯
)

ZMK_BASE_LAYER(Symbols,
//╭─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────╮   ╭─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────╮
    ___               ___               ___               ___               ___               ___              ,    ___               ___               ___               ___               ___               ___             ,
//├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤   ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤
    &kp F1           &kp F2            &kp F3            &kp F4            &kp F5            &kp F6            ,    &kp F7            &kp F8            &kp F9            &kp F10           &kp F11           &kp F12         ,
//├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤   ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤
    ___              &kp CARET         &kp AT            &kp HASH          &kp DLLR          &kp PRCNT         ,    &kp PIPE          &kp AMPS          &kp ASTRK         &kp PLUS          XXX               ___             ,
//├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤   ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤
    ___              &hml LGUI MINUS   &hml LALT COLON   &hml LSHFT DQT    &hml LCTRL EQUAL  &kp UNDER         ,    &kp LBKT          &hmr LCTRL LBRC   &hmr RSHFT LPAR   &hmr LALT LT      &hmr LGUI SEMI    ___             , 
//├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤   ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤
    ___              &kp TILDE         &kp QMARK          &kp SQT          &kp EXCL          &kp GRAVE         ,    &kp RBKT          &kp RBRC          &kp RPAR          &kp GT            &kp BSLH          ___             ,
//├─────────────────┴─────────────────┴─────────────────┼─────────────────┼─────────────────├─────────────────┼   ├─────────────────┼─────────────────┼─────────────────┼─────────────────┴─────────────────┴─────────────────┤
                                        &kp LALT          &kp DEL                                              ,                                        &kp BSPC          &kp RGUI          ,
//                                    ╰─────────────────┴─────────────────┼                                                                           ├─────────────────┼─────────────────╯
                                                          ___               ___               ___              ,      ___             ___               ___             ,
//                                                      ╰─────────────────┴─────────────────┼─────────────────┤   ├─────────────────┼─────────────────┼─────────────────╯
                                                          ___               ___               ___              ,      ___             ___               ___
//                                                      ╰─────────────────┴─────────────────┴─────────────────╯   ╰─────────────────┴─────────────────┴─────────────────╯
)


/* / { */
/*     chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; }; */
/**/
/*     keymap { */
/*         compatible = "zmk,keymap"; */
/**/
/*         default_layer { */
/*             bindings = < */
/* &kp ESC    &kp F1  &kp F2    &kp F3    &kp F4    &kp F5              &kp F6     &kp F7    &kp F8     &kp F9    &kp F10   &kp F11 */
/* &kp EQUAL  &kp N1  &kp N2    &kp N3    &kp N4    &kp N5              &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS */
/* &kp TAB    &kp Q   &kp W     &kp E     &kp R     &kp T               &kp Y      &kp U     &kp I      &kp O     &kp P     &kp BSLH */
/* &kp LCTRL  &kp A   &kp S     &kp D     &kp F     &kp G               &kp H      &kp J     &kp K      &kp L     &kp SEMI  &kp SQT */
/* &kp LSHFT  &kp Z   &kp X     &kp C     &kp V     &kp B               &kp N      &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT */
/* &trans     &trans  &kp LGUI  &kp LALT  &trans                                   &trans    &kp LBKT   &kp RBKT  &trans    &trans */
/*                                        &kp RET   &kp DEL  &kp ESC    &kp GRAVE  &kp BSPC  &kp SPACE */
/*                                        &kp LGUI  &mo 1    &mo 2      &kp CAPS   &mo 2     &mo 1 */
/*             >; */
/*         }; */
/**/
/*         Numpad_Nav_Layer { */
/*             bindings = < */
/* &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans    &trans    &trans     &trans  &trans */
/* &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans    &trans    &trans     &trans  &trans */
/* &trans  &trans  &kp N7  &kp N8  &kp N9  &trans            &trans  &kp HOME  &kp UP    &kp END    &trans  &trans */
/* &trans  &trans  &kp N4  &kp N5  &kp N6  &trans            &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans */
/* &trans  &trans  &kp N1  &kp N2  &kp N3  &trans            &trans  &trans    &trans    &trans     &trans  &trans */
/* &trans  &trans  &trans  &kp N0  &trans                            &trans    &trans    &trans     &trans  &trans */
/*                                 &trans  &trans  &trans    &trans  &trans    &trans */
/*                                 &trans  &trans  &trans    &trans  &trans    &trans */
/*             >; */
/*         }; */
/**/
/*         Keyboard_Control_Layer { */
/*             bindings = < */
/* &trans       &trans        &trans        &trans        &trans        &trans                  &trans  &trans           &trans           &trans           &trans           &trans */
/* &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans */
/* &sys_reset   &trans        &trans        &trans        &trans        &trans                  &trans  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset */
/* &bootloader  &trans        &trans        &trans        &trans        &trans                  &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader */
/* &to 4        &trans        &trans        &trans        &trans        &trans                  &trans  &trans           &trans           &trans           &trans           &to 4 */
/* &to 4        &trans        &trans        &trans        &trans                                        &trans           &trans           &trans           &trans           &to 4 */
/*                                                        &trans        &trans        &trans    &trans  &trans           &trans */
/*                                                        &trans        &trans        &trans    &trans  &trans           &trans */
/*             >; */
/*         }; */
/**/
/*         Auto_Mouse_Layer { */
/*             bindings = < */
/* &trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans */
/* &trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans */
/* &trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans */
/* &trans  &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans            &trans  &trans  &trans  &trans  &trans  &trans */
/* &trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans */
/* &trans  &trans  &trans     &trans     &trans                               &trans  &trans  &trans  &trans  &trans */
/*                                       &trans     &trans  &trans    &trans  &trans  &trans */
/*                                       &trans     &trans  &trans    &trans  &trans  &trans */
/*             >; */
/*         }; */
/**/
/*         factory_test { */
/*             bindings = < */
/* &kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1 */
/* &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7            &kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3 */
/* &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9            &kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5 */
/* &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1            &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7 */
/* &kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3            &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9 */
/* &kp N0  &kp N1  &kp N2  &kp N3  &kp N4                            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0 */
/*                                 &kp N1  &kp N2  &kp N3    &kp N4  &kp N5  &kp N6 */
/*                                 &kp N7  &kp N8  &kp N9    &kp N0  &kp N1  &kp N2 */
/*             >; */
/*         }; */
/*     }; */
/* }; */

// right hand trackball configuration

// &trackball_peripheral_listener {
//    input-processors =
//     activate layer 3 within 500ms of the trackball moving
//     <&zip_temp_layer 3 500>;
// };

//left hand trackball configuration

/* &trackball_central_listener { */
/*     input-processors = */
/*         // multiply sensitivity by 1, divide by 3 (make it slower for scrolling), */
/*         <&zip_xy_scaler 1 3>, */
/*         // make this trackball output scrolling events by default instead of cursor movement, */
/*         <&zip_xy_to_scroll_mapper>, */
/*         // invert vertical scrolling so that the view moves in the same direction as the top of the trackball., */
/*         <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>; */
/* }; */

&trackball_peripheral_listener {
    input-processors = <&zip_xy_scaler 1 1>;

    scroller {
        layers = <NAV>;
        input-processors =      
            // disable horizontal scroll
            <&zip_x_scaler 1 1000000>,
            <&zip_y_scaler 1 10>,
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_scaler 1 5>;
    };
};
